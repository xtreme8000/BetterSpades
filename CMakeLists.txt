cmake_minimum_required(VERSION 3.8)
project(BetterSpades C)

add_subdirectory(src)

# find_package(Threads)

# set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# #if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
# 	add_compile_options(-Ofast -s -static -static-libgcc -static-libstdc++)
# #endif()

# file(GLOB resources resources/*)
# file(COPY ${resources} DESTINATION ${CMAKE_BINARY_DIR}/bin)

# if(MINGW)
#   set(CMAKE_RC_COMPILER_INIT windres)
#   ENABLE_LANGUAGE(RC)
#   SET(CMAKE_RC_COMPILE_OBJECT "<CMAKE_RC_COMPILER> <FLAGS> <DEFINES> -o <OBJECT> <SOURCE>")
# endif()

# file(GLOB sources src/*c)
# if(WIN32)
# 	add_executable(client ${sources} resources/icon.rc)
# 	target_link_libraries(client ${CMAKE_THREAD_LIBS_INIT} -static)
# else()
# 	add_executable(client ${sources})
# 	target_link_libraries(client ${CMAKE_THREAD_LIBS_INIT})
# endif()

# file(GLOB libs libs/*lib)
# target_link_libraries(client ${libs})
# file(GLOB libs2 libs/*a)
# target_link_libraries(client ${libs2})

# if(APPLE)
# 	target_link_libraries(client "-framework OpenGL")
# 	target_link_libraries(client "-framework OpenAL")
# 	target_link_libraries(client glfw)
# 	target_link_libraries(client enet)
# elseif(WIN32)
# 	target_link_libraries(client gdi32)
# 	target_link_libraries(client opengl32)
# 	target_link_libraries(client ws2_32)
# 	target_link_libraries(client winmm)
# else()
# 	target_link_libraries(client GL)
# 	target_link_libraries(client m)
# 	target_link_libraries(client openal)
# 	target_link_libraries(client glfw)
# 	target_link_libraries(client enet)
# endif()
